# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'f:\code\python\SemanticSegmentation\autogis\interface\village_classification\villageClassification.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1014, 863)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMinimumSize(QtCore.QSize(800, 800))
        self.label.setText("")
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setMinimumSize(QtCore.QSize(190, 0))
        self.widget.setMaximumSize(QtCore.QSize(190, 16777215))
        self.widget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.widget.setObjectName("widget")
        self.pushButton_remoteImg = QtWidgets.QPushButton(self.widget)
        self.pushButton_remoteImg.setGeometry(QtCore.QRect(30, 200, 131, 41))
        self.pushButton_remoteImg.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.pushButton_remoteImg.setObjectName("pushButton_remoteImg")
        self.pushButton_mtssPredict = QtWidgets.QPushButton(self.widget)
        self.pushButton_mtssPredict.setGeometry(QtCore.QRect(30, 280, 131, 41))
        self.pushButton_mtssPredict.setObjectName("pushButton_mtssPredict")
        self.comboBox = QtWidgets.QComboBox(self.widget)
        self.comboBox.setGeometry(QtCore.QRect(30, 360, 131, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.pushButton_blend = QtWidgets.QPushButton(self.widget)
        self.pushButton_blend.setGeometry(QtCore.QRect(30, 400, 131, 41))
        self.pushButton_blend.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.pushButton_blend.setObjectName("pushButton_blend")
        self.pushButton_display = QtWidgets.QPushButton(self.widget)
        self.pushButton_display.setGeometry(QtCore.QRect(30, 550, 131, 41))
        self.pushButton_display.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.pushButton_display.setObjectName("pushButton_display")
        self.pushButton_mtvcPredict = QtWidgets.QPushButton(self.widget)
        self.pushButton_mtvcPredict.setGeometry(QtCore.QRect(30, 470, 131, 41))
        self.pushButton_mtvcPredict.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.pushButton_mtvcPredict.setObjectName("pushButton_mtvcPredict")
        self.horizontalLayout.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1014, 23))
        self.menubar.setObjectName("menubar")
        self.menu_F = QtWidgets.QMenu(self.menubar)
        self.menu_F.setObjectName("menu_F")
        self.menu_E = QtWidgets.QMenu(self.menubar)
        self.menu_E.setObjectName("menu_E")
        self.menu_I = QtWidgets.QMenu(self.menubar)
        self.menu_I.setObjectName("menu_I")
        self.menu_V = QtWidgets.QMenu(self.menubar)
        self.menu_V.setObjectName("menu_V")
        self.menu_V_2 = QtWidgets.QMenu(self.menubar)
        self.menu_V_2.setObjectName("menu_V_2")
        self.menu_H = QtWidgets.QMenu(self.menubar)
        self.menu_H.setObjectName("menu_H")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_openImg = QtWidgets.QAction(MainWindow)
        self.action_openImg.setObjectName("action_openImg")
        self.action_loadSModel = QtWidgets.QAction(MainWindow)
        self.action_loadSModel.setObjectName("action_loadSModel")
        self.action_saveImg = QtWidgets.QAction(MainWindow)
        self.action_saveImg.setObjectName("action_saveImg")
        self.action_quit = QtWidgets.QAction(MainWindow)
        self.action_quit.setObjectName("action_quit")
        self.action_cleanImg = QtWidgets.QAction(MainWindow)
        self.action_cleanImg.setObjectName("action_cleanImg")
        self.action_opendir = QtWidgets.QAction(MainWindow)
        self.action_opendir.setObjectName("action_opendir")
        self.action_openDem = QtWidgets.QAction(MainWindow)
        self.action_openDem.setObjectName("action_openDem")
        self.action_loadCModel = QtWidgets.QAction(MainWindow)
        self.action_loadCModel.setObjectName("action_loadCModel")
        self.action_loadMask = QtWidgets.QAction(MainWindow)
        self.action_loadMask.setObjectName("action_loadMask")
        self.menu_F.addAction(self.action_openImg)
        self.menu_F.addAction(self.action_openDem)
        self.menu_F.addSeparator()
        self.menu_F.addAction(self.action_loadSModel)
        self.menu_F.addAction(self.action_loadCModel)
        self.menu_F.addSeparator()
        self.menu_F.addAction(self.action_opendir)
        self.menu_F.addSeparator()
        self.menu_F.addAction(self.action_saveImg)
        self.menu_F.addAction(self.action_quit)
        self.menu_E.addSeparator()
        self.menu_E.addAction(self.action_cleanImg)
        self.menu_E.addAction(self.action_loadMask)
        self.menubar.addAction(self.menu_F.menuAction())
        self.menubar.addAction(self.menu_E.menuAction())
        self.menubar.addAction(self.menu_I.menuAction())
        self.menubar.addAction(self.menu_V.menuAction())
        self.menubar.addAction(self.menu_V_2.menuAction())
        self.menubar.addAction(self.menu_H.menuAction())

        self.retranslateUi(MainWindow)
        self.action_cleanImg.triggered.connect(MainWindow.cleanImg)
        self.action_openImg.triggered.connect(MainWindow.openImg)
        self.action_loadSModel.triggered.connect(MainWindow.load_SModel)
        self.action_quit.triggered.connect(MainWindow.quit)
        self.action_saveImg.triggered.connect(MainWindow.saveImg)
        self.pushButton_mtssPredict.clicked.connect(MainWindow.mtss_predict)
        self.pushButton_remoteImg.clicked.connect(MainWindow.show_remoteImg)
        self.pushButton_display.clicked.connect(MainWindow.display)
        self.pushButton_blend.clicked.connect(MainWindow.blendImg)
        self.action_opendir.triggered.connect(MainWindow.openDir)
        self.action_openDem.triggered.connect(MainWindow.openDem)
        self.pushButton_mtvcPredict.clicked.connect(MainWindow.mtvc_predict)
        self.action_loadCModel.triggered.connect(MainWindow.load_CModel)
        self.action_loadMask.triggered.connect(MainWindow.load_Mask)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_remoteImg.setText(_translate("MainWindow", "遥感图像"))
        self.pushButton_mtssPredict.setText(_translate("MainWindow", "要素分割"))
        self.comboBox.setItemText(0, _translate("MainWindow", "所有土地"))
        self.comboBox.setItemText(1, _translate("MainWindow", "村落"))
        self.comboBox.setItemText(2, _translate("MainWindow", "山体"))
        self.comboBox.setItemText(3, _translate("MainWindow", "水系"))
        self.comboBox.setItemText(4, _translate("MainWindow", "植被"))
        self.comboBox.setItemText(5, _translate("MainWindow", "农田"))
        self.comboBox.setItemText(6, _translate("MainWindow", "荒地"))
        self.comboBox.setItemText(7, _translate("MainWindow", "未知区域"))
        self.pushButton_blend.setText(_translate("MainWindow", "融合结果"))
        self.pushButton_display.setText(_translate("MainWindow", "类别图"))
        self.pushButton_mtvcPredict.setText(_translate("MainWindow", "村落分类"))
        self.menu_F.setTitle(_translate("MainWindow", "文件(F)"))
        self.menu_E.setTitle(_translate("MainWindow", "编辑(E)"))
        self.menu_I.setTitle(_translate("MainWindow", "图像(I)"))
        self.menu_V.setTitle(_translate("MainWindow", "视图(V)"))
        self.menu_V_2.setTitle(_translate("MainWindow", "窗口(V)"))
        self.menu_H.setTitle(_translate("MainWindow", "帮助(H)"))
        self.action_openImg.setText(_translate("MainWindow", "加载遥感数据"))
        self.action_loadSModel.setText(_translate("MainWindow", "加载分割模型"))
        self.action_saveImg.setText(_translate("MainWindow", "保存图像"))
        self.action_quit.setText(_translate("MainWindow", "退出"))
        self.action_cleanImg.setText(_translate("MainWindow", "清空图层"))
        self.action_opendir.setText(_translate("MainWindow", "打开文件夹"))
        self.action_openDem.setText(_translate("MainWindow", "加载高程数据"))
        self.action_loadCModel.setText(_translate("MainWindow", "加载分类模型"))
        self.action_loadMask.setText(_translate("MainWindow", "加载特征图"))
